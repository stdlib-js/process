{"version":3,"file":"index.mjs","sources":["../argv/lib/main.js","../chdir/lib/main.js","../cwd/lib/main.js","../env/lib/main.js","../exec-path/lib/main.js","../exec-path/lib/index.js","../exec-path/lib/browser.js","../getegid/lib/native.js","../getegid/lib/main.js","../getegid/lib/polyfill.js","../geteuid/lib/native.js","../geteuid/lib/main.js","../geteuid/lib/polyfill.js","../getgid/lib/native.js","../getgid/lib/main.js","../getgid/lib/polyfill.js","../getuid/lib/native.js","../getuid/lib/main.js","../getuid/lib/polyfill.js","../node-version/lib/main.js","../node-version/lib/process.js","../node-version/lib/index.js","../node-version/lib/browser.js","../read-stdin/lib/browser.js","../umask/lib/to_symbolic.js","../umask/lib/from_symbolic.js","../umask/lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* An array containing command-line arguments passed when launching the calling process.\n*\n* @name ARGV\n* @type {StringArray}\n*\n* @example\n* console.log( ARGV );\n* // => [...]\n*/\nvar ARGV = proc.argv;\n\n\n// EXPORTS //\n\nexport default ARGV;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Changes the current working directory.\n*\n* @param {string} path - desired working directory\n* @returns {(Error|null)} error object\n*\n* @example\n* var err = chdir( __dirname );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction chdir( path ) {\n\ttry {\n\t\tproc.chdir( path );\n\t} catch ( err ) {\n\t\treturn err;\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default chdir;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Returns the current working directory of the process.\n*\n* @returns {string} current working directory of the process\n*\n* @example\n* var dir = cwd();\n* // e.g., returns '/path/to/current/working/directory'\n*/\nfunction cwd() {\n\treturn proc.cwd();\n}\n\n\n// EXPORTS //\n\nexport default cwd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* An object containing the user environment.\n*\n* @name ENV\n* @type {Object}\n*\n* @example\n* console.dir( ENV );\n*/\nvar ENV = proc.env;\n\n\n// EXPORTS //\n\nexport default ENV;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Absolute pathname of the executable which started the current Node.js process.\n*\n* @constant\n* @type {string}\n*\n* @example\n* if ( EXEC_PATH ) {\n*     console.log( 'Executable: %s', EXEC_PATH );\n* } else {\n*     console.log( 'Not running in Node.js.' );\n* }\n*/\nvar EXEC_PATH = proc.execPath;\n\n\n// EXPORTS //\n\nexport default EXEC_PATH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Absolute pathname of the executable which started the current Node.js process.\n*\n* @module @stdlib/process/exec-path\n*\n* @example\n* import EXEC_PATH from '@stdlib/process/exec-path';\n*\n* if ( EXEC_PATH ) {\n*     console.log( 'Executable: %s', EXEC_PATH );\n* } else {\n*     console.log( 'Not running in Node.js.' );\n* }\n*/\n\n// MODULES //\n\nimport IS_NODE from '@stdlib/assert/is-node';\nimport node from './main.js';\nimport browser from './browser.js';\n\n\n// MAIN //\n\nvar EXEC_PATH;\nif ( IS_NODE ) {\n\tEXEC_PATH = node;\n} else {\n\tEXEC_PATH = browser;\n}\n\n\n// EXPORTS //\n\nexport default EXEC_PATH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default null;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Returns the effective numeric group identity of the calling process.\n*\n* @private\n* @name getegid\n* @type {Function}\n* @returns {integer} effective numeric group identity\n*\n* @example\n* var gid = getegid();\n*/\nvar getegid = proc.getegid;\n\n\n// EXPORTS //\n\nexport default getegid;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport polyfill from './polyfill.js';\nimport builtin from './native.js';\n\n\n// MAIN //\n\n/**\n* Returns the effective numeric group identity of the calling process.\n*\n* @name getegid\n* @type {Function}\n* @returns {(integer|null)} effective numeric group identity or null\n*\n* @example\n* var gid = getegid();\n*/\nvar getegid = ( isFunction( builtin ) ) ? builtin : polyfill;\n\n\n// EXPORTS //\n\nexport default getegid;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Polyfill for returning an effective numeric group identity for environments which do not provide native support.\n*\n* @private\n* @returns {null} null\n*\n* @example\n* var gid = getegid();\n* // returns null\n*/\nfunction getegid() {\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getegid;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Returns the effective numeric user identity of the calling process.\n*\n* @private\n* @name geteuid\n* @type {Function}\n* @returns {integer} effective numeric user identity\n*\n* @example\n* var uid = geteuid();\n*/\nvar geteuid = proc.geteuid;\n\n\n// EXPORTS //\n\nexport default geteuid;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport polyfill from './polyfill.js';\nimport builtin from './native.js';\n\n\n// MAIN //\n\n/**\n* Returns the effective numeric user identity of the calling process.\n*\n* @name geteuid\n* @type {Function}\n* @returns {(integer|null)} effective numeric user identity or null\n*\n* @example\n* var uid = geteuid();\n*/\nvar geteuid = ( isFunction( builtin ) ) ? builtin : polyfill;\n\n\n// EXPORTS //\n\nexport default geteuid;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Polyfill for returning an effective numeric user identity for environments which do not provide native support.\n*\n* @private\n* @returns {null} null\n*\n* @example\n* var uid = geteuid();\n* // returns null\n*/\nfunction geteuid() {\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default geteuid;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Returns the numeric group identity of the calling process.\n*\n* @private\n* @name getgid\n* @type {Function}\n* @returns {integer} numeric group identity\n*\n* @example\n* var gid = getgid();\n*/\nvar getgid = proc.getgid;\n\n\n// EXPORTS //\n\nexport default getgid;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport polyfill from './polyfill.js';\nimport builtin from './native.js';\n\n\n// MAIN //\n\n/**\n* Returns the numeric group identity of the calling process.\n*\n* @name getgid\n* @type {Function}\n* @returns {(integer|null)} numeric group identity or null\n*\n* @example\n* var gid = getgid();\n*/\nvar getgid = ( isFunction( builtin ) ) ? builtin : polyfill;\n\n\n// EXPORTS //\n\nexport default getgid;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Polyfill for returning a numeric group identity for environments which do not provide native support.\n*\n* @private\n* @returns {null} null\n*\n* @example\n* var gid = getgid();\n* // returns null\n*/\nfunction getgid() {\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getgid;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Returns the numeric user identity of the calling process.\n*\n* @private\n* @name getuid\n* @type {Function}\n* @returns {integer} numeric user identity\n*\n* @example\n* var uid = getuid();\n*/\nvar getuid = proc.getuid;\n\n\n// EXPORTS //\n\nexport default getuid;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport polyfill from './polyfill.js';\nimport builtin from './native.js';\n\n\n// MAIN //\n\n/**\n* Returns the numeric user identity of the calling process.\n*\n* @name getuid\n* @type {Function}\n* @returns {(integer|null)} numeric user identity or null\n*\n* @example\n* var uid = getuid();\n*/\nvar getuid = ( isFunction( builtin ) ) ? builtin : polyfill;\n\n\n// EXPORTS //\n\nexport default getuid;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Polyfill for returning a numeric user identity for environments which do not provide native support.\n*\n* @private\n* @returns {null} null\n*\n* @example\n* var uid = getuid();\n* // returns null\n*/\nfunction getuid() {\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getuid;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport proc from './process.js';\n\n\n// MAIN //\n\n/**\n* Node version.\n*\n* @constant\n* @type {string}\n*/\nvar VERSION = proc.versions.node;\n\n\n// EXPORTS //\n\nexport default VERSION;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// EXPORTS //\n\nexport default proc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Node version.\n*\n* @module @stdlib/process/node-version\n*\n* @example\n* var semver = require( 'semver' );\n* import VERSION from '@stdlib/process/node-version';\n*\n* if ( semver.lt( VERSION, '1.0.0' ) ) {\n*    console.log( 'Running on a pre-io.js version...' );\n* }\n* else if ( semver.lt( VERSION, '4.0.0' ) ) {\n*    console.log( 'Running on an io.js version...' );\n* }\n* else {\n*    console.log( 'Running on a post-io.js version...' );\n* }\n*/\n\n// MODULES //\n\nimport IS_NODE from '@stdlib/assert/is-node';\nimport node from './main.js';\nimport browser from './browser.js';\n\n\n// MAIN //\n\nvar VERSION;\nif ( IS_NODE ) {\n\tVERSION = node;\n} else {\n\tVERSION = browser;\n}\n\n\n// EXPORTS //\n\nexport default VERSION;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default null;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Browser shim.\n*\n* @private\n* @param {(string|null)} [encoding] - string encoding\n* @param {Callback} clbk - callback to be invoked upon completion\n* @throws {TypeError} callback argument must be a function\n*\n* @example\n* function onRead( error ) {\n*     if ( error ) {\n*         return console.error( error.message );\n*     }\n* }\n*\n* stdin( onRead );\n*/\nfunction stdin() {\n\tvar clbk = arguments[ arguments.length-1 ];\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\tsetTimeout( onTimeout, 0 );\n\n\t/**\n\t* Callback invoked upon a timeout.\n\t*\n\t* @private\n\t*/\n\tfunction onTimeout() {\n\t\tclbk( new Error( 'invalid operation. The environment does not support reading from `stdin`.' ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default stdin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport lpad from '@stdlib/string/left-pad';\nimport OCTAL_CODES from './octal_codes.json';\n\n\n// MAIN //\n\n/**\n* Converts an integer mask to symbolic notation.\n*\n* @private\n* @param {NonNegativeInteger} mask - integer mask\n* @returns {string} mask in symbolic notation\n*/\nfunction toSymbolic( mask ) {\n\tvar out;\n\n\t// Convert the mask to a four-digit octal string representation (e.g., 0077):\n\tmask = mask.toString( 8 );\n\tmask = lpad( mask, 4, '0' );\n\n\t// For each digit, get the permissions: (NOTE: we skip the special modes digit, as only the file permission bits of the mask are used; see http://man7.org/linux/man-pages/man2/umask.2.html)\n\tout = '';\n\tout += 'u='+OCTAL_CODES[ mask[1] ];\n\tout += ',';\n\tout += 'g='+OCTAL_CODES[ mask[2] ];\n\tout += ',';\n\tout += 'o='+OCTAL_CODES[ mask[3] ];\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toSymbolic;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport lpad from '@stdlib/string/left-pad';\n\n\n// VARIABLES //\n\n// Regular expression to parse a mask expression:\nvar RE_MASK_EXPRESSION = /^(u{0,1}g{0,1}o{0,1}a{0,1}|)([+\\-=])(r{0,1}w{0,1}x{0,1})$/;\n\n// Table of permission bit mask offsets:\nvar PERMS = {\n\t'r': 2, // read\n\t'w': 1, // write\n\t'x': 0  // execute\n};\n\n// Table of class indices in the octal format (e.g., `0o0077`):\nvar WHO = {\n\t's': 0, // special mode (ignored; see http://man7.org/linux/man-pages/man2/umask.2.html)\n\t'u': 1, // user\n\t'g': 2, // group\n\t'o': 3  // other/non-group\n};\n\n\n// FUNCTIONS //\n\n/**\n* Returns a bit mask.\n*\n* @private\n* @param {NonNegativeInteger} offset - bit offset (right-to-left)\n* @returns {NonNegativeInteger} bit mask\n*\n* @example\n* var y = bitMask( 3 );\n* // returns 8\n*/\nfunction bitMask( offset ) {\n\treturn ( 1 << offset )>>>0; // asm type annotation\n}\n\n/**\n* Sets a bit.\n*\n* @private\n* @param {NonNegativeInteger} value - value\n* @param {NonNegativeInteger} offset - bit offset (right-to-left)\n* @returns {NonNegativeInteger} updated value\n*\n* @example\n* var y = setBit( 8, 2 );\n*/\nfunction setBit( value, offset ) {\n\treturn ( value | bitMask( offset ) )>>>0; // asm type annotation\n}\n\n/**\n* Clears a bit.\n*\n* @private\n* @param {NonNegativeInteger} value - value\n* @param {NonNegativeInteger} offset - bit offset (right-to-left)\n* @returns {NonNegativeInteger} updated value\n*/\nfunction clearBit( value, offset ) {\n\treturn ( value & ~bitMask( offset ) )>>>0; // asm type annotation\n}\n\n\n// MAIN //\n\n/**\n* Converts a mask expression in symbolic notation to an integer.\n*\n* @private\n* @param {NonNegativeInteger} mask - current mask\n* @param {string} expr - mask expression\n* @returns {(NonNegativeInteger|Error)} integer mask or parse error\n*/\nfunction fromSymbolic( mask, expr ) {\n\tvar digits;\n\tvar parts;\n\tvar perm;\n\tvar who;\n\tvar tmp;\n\tvar idx;\n\tvar op;\n\tvar w;\n\tvar o;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\t// Split the mask into octal digits (e.g., [ '0', '0', '7', '7' ]):\n\tdigits = lpad( mask.toString( 8 ), 4, '0' ).split( '' );\n\n\t// Convert each octal digit to an integer value:\n\tfor ( i = 0; i < digits.length; i++ ) {\n\t\tdigits[ i ] = parseInt( digits[ i ], 10 );\n\t}\n\n\t// See if we can easily split the mask into separate mask expressions (e.g., `u+x,g=rw,o=` => [ 'u+x', 'g=rw', 'o=' ] ):\n\tparts = expr.split( ',' );\n\n\t// For each expression, split into \"class\", \"operator\", and \"symbols\" and update the mask octal digits:\n\tfor ( i = 0; i < parts.length; i++ ) {\n\t\ttmp = parts[ i ].match( RE_MASK_EXPRESSION );\n\t\tif ( tmp === null ) {\n\t\t\treturn new Error( format( 'invalid argument. Unable to parse mask expression. Ensure the expression is properly formatted, only uses the class letters \"u\", \"g\", \"o\", and \"a\", only uses the operators \"+\", \"-\", and \"=\", and only uses the permission symbols \"r\", \"w\", and \"x\". Value: `%s`.', expr ) );\n\t\t}\n\t\t// Extract the expression parts:\n\t\twho = tmp[ 1 ];\n\t\tif ( who === '' ) {\n\t\t\t// If a user class is not specified (e.g., `+x`), \"ugo\" (user, group, other) is implied...\n\t\t\twho = 'ugo';\n\t\t} else {\n\t\t\t// Replace `a` (all) user class letter with \"ugo\" (user, group, other) equivalent...\n\t\t\tw = '';\n\t\t\tfor ( k = 0; k < who.length; k++ ) {\n\t\t\t\tif ( who[ k ] === 'a' ) {\n\t\t\t\t\tw += 'ugo';\n\t\t\t\t} else {\n\t\t\t\t\tw += who[ k ];\n\t\t\t\t}\n\t\t\t}\n\t\t\twho = w;\n\t\t}\n\t\top = tmp[ 2 ];\n\t\tperm = tmp[ 3 ];\n\n\t\t// NOTE: the algorithm below is from the perspective of the mask. If implemented for, say, `chmod`, the \"disabling\"/\"enabling\" logic would be reversed. Recall that a \"1\" in the mask, serves to **disable** a permission setting, not enable.\n\n\t\t// Disable permissions...\n\t\tif ( op === '-' ) {\n\t\t\tif ( perm === '' ) {\n\t\t\t\t// The `-` operation by itself does not change any bits...\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor ( j = 0; j < perm.length; j++ ) {\n\t\t\t\to = PERMS[ perm[j] ];\n\t\t\t\tfor ( k = 0; k < who.length; k++ ) {\n\t\t\t\t\tidx = WHO[ who[k] ];\n\t\t\t\t\tdigits[ idx ] = setBit( digits[ idx ], o ); // to disable, we flip on mask bits\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Enable permissions...\n\t\telse if ( op === '+' ) {\n\t\t\tif ( perm === '' ) {\n\t\t\t\t// The `+` operation by itself does not change any bits...\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor ( j = 0; j < perm.length; j++ ) {\n\t\t\t\to = PERMS[ perm[j] ];\n\t\t\t\tfor ( k = 0; k < who.length; k++ ) {\n\t\t\t\t\tidx = WHO[ who[k] ];\n\t\t\t\t\tdigits[ idx ] = clearBit( digits[ idx ], o ); // to enable, we clear mask bits\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Disable all permissions by flipping on all permission mask bits...\n\t\telse if ( perm === '' ) { // op === '='\n\t\t\tfor ( k = 0; k < who.length; k++ ) {\n\t\t\t\tidx = WHO[ who[k] ];\n\t\t\t\tdigits[ idx ] = 7;\n\t\t\t}\n\t\t}\n\t\t// Explicitly set permissions...\n\t\telse { // op === '='\n\t\t\t// First, disable all permissions by flipping on all permission mask bits...\n\t\t\tfor ( k = 0; k < who.length; k++ ) {\n\t\t\t\tidx = WHO[ who[k] ];\n\t\t\t\tdigits[ idx ] = 7;\n\t\t\t}\n\t\t\t// Then, explicitly enable permissions by clearing mask bits...\n\t\t\tfor ( j = 0; j < perm.length; j++ ) {\n\t\t\t\to = PERMS[ perm[j] ];\n\t\t\t\tfor ( k = 0; k < who.length; k++ ) {\n\t\t\t\t\tidx = WHO[ who[k] ];\n\t\t\t\t\tdigits[ idx ] = clearBit( digits[ idx ], o );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Convert the digits to an integer value...\n\tfor ( i = 0; i < digits.length; i++ ) {\n\t\tdigits[ i ] = digits[ i ].toString();\n\t}\n\treturn parseInt( digits.join( '' ), 8 );\n}\n\n\n// EXPORTS //\n\nexport default fromSymbolic;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\nimport toSymbolic from './to_symbolic.js';\nimport fromSymbolic from './from_symbolic.js';\n\n\n// MAIN //\n\n/**\n* Get/set the process mask.\n*\n* ## Notes\n*\n* -   If provided a mask, the function sets the current mask and returns the previous process mask. Otherwise, the function returns the current process mask.\n*\n*\n* @param {(NonNegativeInteger|string)} [mask] - mask\n* @param {Object} [options] - options\n* @param {boolean} [options.symbolic] - boolean indicating whether to return a mask using symbolic notation\n* @throws {TypeError} must provide either a string, nonnegative integer, or an options object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a parseable expression mask\n* @returns {(NonNegativeInteger|string)} process mask\n*\n* @example\n* var mask = umask();\n* // returns <number>\n*/\nfunction umask() {\n\tvar options;\n\tvar nargs;\n\tvar mask;\n\tvar opts;\n\tvar arg;\n\n\tnargs = arguments.length;\n\tif ( nargs === 0 ) {\n\t\treturn proc.umask();\n\t}\n\topts = {};\n\targ = arguments[ 0 ];\n\tif ( nargs === 1 ) {\n\t\tif ( isString( arg ) ) {\n\t\t\tmask = fromSymbolic( proc.umask(), arg );\n\t\t\tif ( mask instanceof Error ) {\n\t\t\t\tthrow mask;\n\t\t\t}\n\t\t\treturn proc.umask( mask );\n\t\t}\n\t\tif ( isNonNegativeInteger( arg ) ) {\n\t\t\t// Easy case where we use the built-in function to set the mask and return its return value:\n\t\t\treturn proc.umask( arg );\n\t\t}\n\t\tif ( isObject( arg ) ) {\n\t\t\tif ( hasOwnProp( arg, 'symbolic' ) ) {\n\t\t\t\topts.symbolic = arg.symbolic;\n\t\t\t\tif ( !isBoolean( opts.symbolic ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'symbolic', opts.symbolic ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\tmask = proc.umask();\n\t\t\tif ( opts.symbolic ) {\n\t\t\t\tmask = toSymbolic( mask );\n\t\t\t}\n\t\t\treturn mask;\n\t\t}\n\t\tthrow new TypeError( format( 'invalid argument. Must provide either a string, nonnegative integer, or an options object. Value: `%s`.', arg ) );\n\t}\n\toptions = arguments[ 1 ];\n\tif ( !isObject( options ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'symbolic' ) ) {\n\t\topts.symbolic = options.symbolic;\n\t\tif ( !isBoolean( opts.symbolic ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'symbolic', opts.symbolic ) );\n\t\t}\n\t}\n\tif ( isString( arg ) ) {\n\t\tmask = fromSymbolic( proc.umask(), arg );\n\t\tif ( mask instanceof Error ) {\n\t\t\tthrow mask;\n\t\t}\n\t} else if ( isNonNegativeInteger( arg ) ) {\n\t\tmask = arg;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a string or nonnegative integer. Value: `%s`.', arg ) );\n\t}\n\t// Set the mask:\n\tmask = proc.umask( mask );\n\n\t// Determine how to format the output value:\n\tif ( opts.symbolic ) {\n\t\tmask = toSymbolic( mask );\n\t}\n\treturn mask;\n}\n\n\n// EXPORTS //\n\nexport default umask;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name ARGV\n* @memberof ns\n* @readonly\n* @type {Array}\n* @see {@link module:@stdlib/process/argv}\n*/\nimport ARGV from './../argv';\nsetReadOnly( ns, 'ARGV', ARGV );\n\n/**\n* @name chdir\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/process/chdir}\n*/\nimport chdir from './../chdir';\nsetReadOnly( ns, 'chdir', chdir );\n\n/**\n* @name cwd\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/process/cwd}\n*/\nimport cwd from './../cwd';\nsetReadOnly( ns, 'cwd', cwd );\n\n/**\n* @name ENV\n* @memberof ns\n* @readonly\n* @type {Object}\n* @see {@link module:@stdlib/process/env}\n*/\nimport ENV from './../env';\nsetReadOnly( ns, 'ENV', ENV );\n\n/**\n* @name EXEC_PATH\n* @memberof ns\n* @readonly\n* @type {string}\n* @see {@link module:@stdlib/process/exec-path}\n*/\nimport EXEC_PATH from './../exec-path';\nsetReadOnly( ns, 'EXEC_PATH', EXEC_PATH );\n\n/**\n* @name getegid\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/process/getegid}\n*/\nimport getegid from './../getegid';\nsetReadOnly( ns, 'getegid', getegid );\n\n/**\n* @name geteuid\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/process/geteuid}\n*/\nimport geteuid from './../geteuid';\nsetReadOnly( ns, 'geteuid', geteuid );\n\n/**\n* @name getgid\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/process/getgid}\n*/\nimport getgid from './../getgid';\nsetReadOnly( ns, 'getgid', getgid );\n\n/**\n* @name getuid\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/process/getuid}\n*/\nimport getuid from './../getuid';\nsetReadOnly( ns, 'getuid', getuid );\n\n/**\n* @name NODE_VERSION\n* @memberof ns\n* @readonly\n* @type {(string|null)}\n* @see {@link module:@stdlib/process/node-version}\n*/\nimport NODE_VERSION from './../node-version';\nsetReadOnly( ns, 'NODE_VERSION', NODE_VERSION );\n\n/**\n* @name stdin\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/process/read-stdin}\n*/\nimport stdin from './../read-stdin';\nsetReadOnly( ns, 'stdin', stdin );\n\n/**\n* @name umask\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/process/umask}\n*/\nimport umask from './../umask';\nsetReadOnly( ns, 'umask', umask );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["ARGV","require$$0","argv","proc","chdir","path","err","cwd","ENV","env","EXEC_PATH","execPath","EXEC_PATH$1","IS_NODE","node","getegid","isFunction","builtin","geteuid","getgid","getuid","VERSION","versions","NODE_VERSION","stdin","clbk","arguments","length","TypeError","format","onTimeout","Error","setTimeout","toSymbolic","mask","out","toString","lpad","OCTAL_CODES","RE_MASK_EXPRESSION","PERMS","r","w","x","WHO","s","u","g","o","bitMask","offset","clearBit","value","fromSymbolic","expr","digits","parts","perm","who","tmp","idx","op","i","j","k","split","parseInt","match","join","umask","options","nargs","opts","arg","isString","isNonNegativeInteger","isObject","hasOwnProp","symbolic","isBoolean","ns","setReadOnly"],"mappings":"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"}